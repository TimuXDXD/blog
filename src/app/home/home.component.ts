import { Component, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { AppService } from './home.service';

@Component({
  selector: 'app-home',
  templateUrl: './home.component.html',
  styleUrls: ['./home.component.css']
})
export class HomeComponent implements OnInit {
  time$: Observable<any>;
  giwawa =
  `
  ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠋⠄
  ⢿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠋⣁⣀⡠⡀⠄⠉⠙⠛⠿⢿⣿⣿⡿⠙⠁⠄⠄⣠
  ⠄⠈⠛⠛⡿⠛⠛⠉⠄⠄⣠⣾⣿⣿⣿⣿⣿⣧⣄⢀⡀⣀⠈⠥⣤⢀⠄⠄⣼⣿
  ⣄⠄⠄⠄⣇⣀⣤⣤⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣅⠄⢈⡬⢠⣾⣿⠟
  ⣿⣷⡄⠰⣾⣿⣿⣿⣿⣿⣿⣿⣟⣿⣿⣿⣿⡿⠿⠿⠿⣿⣿⣧⡘⠃⠘⣿⣟⠄
  ⣉⠻⠃⠈⠟⠉⠁⣤⡙⢻⣿⣿⣿⣷⣿⣿⡟⠁⣴⠂⠄⠄⠈⣿⣷⡄⠄⠈⢓⣛
  ⣿⣤⣤⠸⡆⠄⠄⠈⣳⣾⣿⠿⠿⠿⢿⣿⣷⣤⣯⠄⠄⠄⢀⣿⣿⣿⠄⠐⣿⣿
  ⣿⣿⣿⡇⠨⣀⣀⣴⣿⣿⠁⠄⠄⠄⠄⣿⣿⣿⣿⣷⣦⣶⣾⣿⣿⣿⣴⡆⢹⣿
  ⣿⣿⣿⣷⠄⠉⠛⢿⣿⣿⡀⠄⠄⠄⣷⣿⣿⣿⣿⡿⠇⠄⣰⣿⣿⣿⠚⢣⣿⣿
  ⠉⠻⢿⣿⠄⣀⣤⡄⠙⠛⠛⠒⠄⠒⠙⠛⠛⠛⠉⢀⣴⣾⣿⣿⣿⠇⠄⢀⠙⢿
  ⠄⣶⡶⠄⠄⢻⣿⣷⣄⣶⣶⣶⣤⣤⡶⣶⠾⣿⣶⣿⣿⣿⣿⣿⡃⣀⣴⣿⡷⢸
  ⢰⣿⣧⠄⠠⣤⡙⢿⣿⣿⣄⣀⣉⣀⣀⣴⣿⣿⣿⢿⣿⣿⣿⣿⣿⣿⣿⠟⢁⡼
  ⢸⣿⠿⠄⡦⠈⠛⠿⣭⣿⣟⠿⠿⠿⠿⢿⣿⣿⠿⠖⠈⠉⠉⠁⠄⠉⠁⠄⠻⠘`
  jsHelloWorld =
`
ﾟωﾟﾉ = /｀ｍ´）ﾉ~┻━┻//*´∇｀*/['_'];
o = (ﾟｰﾟ) = _ = 3;
c = (ﾟΘﾟ) = (ﾟｰﾟ) - (ﾟｰﾟ);
(ﾟДﾟ) = (ﾟΘﾟ) = (o^_^o)/(o^_^o);
(ﾟДﾟ) = {
  ﾟΘﾟ:  '_',
  ﾟωﾟﾉ: ((ﾟωﾟﾉ==3)+'_')[ﾟΘﾟ],
  ﾟｰﾟﾉ: (ﾟωﾟﾉ+'_')[o^_^o-(ﾟΘﾟ)],
  ﾟДﾟﾉ: ((ﾟｰﾟ==3)+'_')[ﾟｰﾟ]
};
(ﾟДﾟ)[ﾟΘﾟ] = ((ﾟωﾟﾉ==3)+'_')[c^_^o];
(ﾟДﾟ)['c'] = ((ﾟДﾟ)+'_')[(ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ)];
(ﾟДﾟ)['o'] = ((ﾟДﾟ)+'_')[ﾟΘﾟ];
(ﾟoﾟ)=(ﾟДﾟ)['c'] + (ﾟДﾟ)['o'] + (ﾟωﾟﾉ + '_')[ﾟΘﾟ] + ((ﾟωﾟﾉ==3) + '_')[ﾟｰﾟ] + ((ﾟДﾟ) + '_')[(ﾟｰﾟ) + (ﾟｰﾟ)] + ((ﾟｰﾟ==3) + '_')[ﾟΘﾟ] + ((ﾟｰﾟ==3) + '_')[(ﾟｰﾟ) - (ﾟΘﾟ)] + (ﾟДﾟ)['c'] + ((ﾟДﾟ) + '_')[(ﾟｰﾟ) + (ﾟｰﾟ)] + (ﾟДﾟ)['o'] + ((ﾟｰﾟ==3) + '_')[ﾟΘﾟ];
(ﾟДﾟ)['_'] = (o^_^o)[ﾟoﾟ][ﾟoﾟ];
(ﾟεﾟ) = ((ﾟｰﾟ==3) + '_')[ﾟΘﾟ] + (ﾟДﾟ).ﾟДﾟﾉ + ((ﾟДﾟ) + '_')[(ﾟｰﾟ) + (ﾟｰﾟ)] + ((ﾟｰﾟ==3) + '_')[o^_^o-ﾟΘﾟ] + ((ﾟｰﾟ==3) + '_')[ﾟΘﾟ] + (ﾟωﾟﾉ+'_')[ﾟΘﾟ];
(ﾟｰﾟ) += (ﾟΘﾟ);
(ﾟДﾟ)[ﾟεﾟ] = '\\';
(ﾟДﾟ).ﾟΘﾟﾉ = (ﾟДﾟ+ﾟｰﾟ)[o^_^o-(ﾟΘﾟ)];
(oﾟｰﾟo) = (ﾟωﾟﾉ+'_')[c^_^o];
(ﾟДﾟ)[ﾟoﾟ] = '\"';
(ﾟДﾟ)['_']((ﾟДﾟ)['_'](ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o)+(o^_^o))+((o^_^o)-(ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o)+(o^_^o))+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ)+(ﾟΘﾟ))+(c^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+((o^_^o)-(ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟΘﾟ)+(c^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+((ﾟｰﾟ)+(o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+(c^_^o)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o)-(ﾟΘﾟ))+((ﾟｰﾟ)+(o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+((ﾟｰﾟ)+(o^_^o))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((o^_^o)+(o^_^o))+((o^_^o)-(ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+(ﾟｰﾟ)+(ﾟｰﾟ)+(ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+((o^_^o)-(ﾟΘﾟ))+(ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟoﾟ])(ﾟΘﾟ))('_');`
  pyHelloWorld =
`
(lambda _, __, ___, ____, _____, ______, _______, ________:
    getattr(
        __import__(True.__class__.__name__[_] + [].__class__.__name__[__]),
        ().__class__.__eq__.__class__.__name__[:__] +
        ().__iter__().__class__.__name__[______:________] +
        {}.__class__.__repr__.__class__.__name__[_____]
    )(
        _, (lambda _, __, ___: _(_, __, ___))(
            lambda _, __, ___:
                False.__class__.__name__.__class__.__dict__[
                {}.__class__.__len__.__name__[_______ << ______ >> _______:_____] +
                {}.__class__.__contains__.__name__[________ << ____ >> ______:____] +
                [].__class__.__delattr__.__name__[_____ << ____ >> _____:____]
                ](chr(___ % __)) + _(_, __, ___ // __) if ___ else
                (lambda: _).__code__.co_lnotab,
            _ << ________,
            (((_____ << ____) + _) << ((___ << _____) - ___)) + (((((___ << __)
            - _) << ___) + _) << ((_____ << ____) + (_ << _))) + (((_______ <<
            __) - _) << (((((_ << ___) + _)) << ___) + (_ << _))) + (((_______
            << ___) + _) << ((_ << ______) + _)) + (((_______ << ____) - _) <<
            ((_______ << ___))) + (((_ << ____) - _) << ((((___ << __) + _) <<
            __) - _)) - (_______ << ((((___ << __) - _) << __) + _)) + (_______
            << (((((_ << ___) + _)) << __))) - ((((((_ << ___) + _)) << __) +
            _) << ((((___ << __) + _) << _))) + (((_______ << __) - _) <<
            (((((_ << ___) + _)) << _))) + (((___ << ___) + _) << ((_____ <<
            _))) + (_____ << ______) + (_ << ___)
        )
    )
)(
    *(lambda _, __, ___: _(_, __, ___))(
        (lambda _, __, ___:
            [__(___[(lambda: _).__code__.co_nlocals])] +
            _(_, __, ___[(lambda _: _).__code__.co_nlocals:]) if ___ else []
        ),
        lambda _: _.__code__.co_argcount,
        (
            lambda _: _,
            lambda _, __: _,
            lambda _, __, ___: _,
            lambda _, __, ___, ____: _,
            lambda _, __, ___, ____, _____: _,
            lambda _, __, ___, ____, _____, ______: _,
            lambda _, __, ___, ____, _____, ______, _______: _,
            lambda _, __, ___, ____, _____, ______, _______, ________: _
        )
    )
)
`
  pySmc = `
import os
import sys
import time
import subprocess

c = 0
if c >= 10:
    exit()
sf = sys.argv[0]
with open(sf, 'r') as f:
    t = f.read()

code = f'''print('Executed {c+1} times.')\\n'''

t = t.replace(t[t.find('c = ')+4:t.find('\\n',t.find('c = '))],f'{int(c) + 1}',1)

t = t[:t.rfind('a\\n')+2] + code + t[t.rfind('e'):]
os.rename(sf,'tmp.py')

with open(sf,'w') as f:
    f.write(t)

time.sleep(1)
subprocess.Popen(['python',sf])
os.remove('tmp.py')
# Self modifying area

exit()
`
  constructor(private appService: AppService) {
    this.time$ = this.appService.getDate();
  }

  ngOnInit(): void {
  }

}
